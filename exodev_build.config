%%
%% The name of the release built by this project.
%% Used by make when executing rebar create-node nodeid=$(release_name)
%%
{ release_name, "exodev_template" }.

%%
%% The cross compile toolchain to use in order to generate binaries
%% for the target.
%% Each toolchain utility (gcc,etc) are expected to be stored in the 
%% x_comp_toolchain_root bin directory and have the name ${x_comp_target_arch}-gcc, 
%% ${x_comp_target_arch}-ld, etc.
%%
%% x_comp_target_arch and x_comp_toolchain_root will be provided
%% as environment variables to rebar, in order to be picked up by the various
%% port drivers included in rebar.config's deps (such as inpevt and gpio).
%% These port drivers will pick up the environment variables in their
%% rebar.config.script files in order to setup the build environment for
%% the drivers correctly.
%%
{ x_comp_toolchain_root, "/opt/arm-2007q1" }.


%%
%% The include directory for the linux kernel used by the target.
%% 
%% These include directories will be searched for linux-specific
%% header files (linux/can.h for example). This path should
%% point to the include files in linux-X.Y.Z/include, where linux-X.Y.Z 
%% is the source tree of the linux kernel executing on the target.
%%
%% If the correct kernel header include directories are searched automatically by 
%% the toolchain (specified by x_comp_toolchain_root), you can set this entry to "/dev/null"
%%
%% Do not remove this entry. Set to "/dev/null" if not needed
{ x_comp_kernel_headers, "/opt/linux-2.6.30-headers/include" }.

%%
%% Target architecture. This will be used both to setup
%% the OTP cross compile build environment, and to name the
%% various toolchain components such as gcc, etc.
%%
%% The architecture string will also be used when doing a local install
%% of the cross compiled erlang under $PWD.
%%
{ x_comp_target_arch, "arm-none-linux-gnueabi" }.


%%
%% Build architecture. This will be used both to setup
%% the OTP cross compile build environment.
%%
%% This target does normally not have to be changed. If you are uncertain
%% if you have the correct value, check what the OTP source tree's 
%% erts/autoconf/config.guess shell script outputs when executed.
%%
{ x_comp_build_arch, "i686-pc-linux-gnu" }.

%%
%% The URL to the directory where we can grab the erlang OTP source tar ball.
%%
{ x_comp_otp_download_url, "http://www.erlang.org/download" }.

%%
%% The file within x_comp_otp_download_url that we are to grab.
%%
%% The erlang distro will be downloaded, unpacked, and built using the
%% x_comp_target_arch and x_comp_toolchain_root values to name things
%% and locate the compilers to use. The end result will be stored in
%% erl-${x_comp_target_arch}. This location will be used by port drivers,
%% such as inpevt and gpio, compiled as a part of the exodev system
%% will look for header files and archives to link with.
%%
{ x_comp_otp_download_file, "otp_src_R15B01.tar.gz" }.

%%
%% Additional c flags to pass to port drivers in the deps list 
%% when they are compiled.
%%
{ x_comp_c_flags, "" }.


%%
%% Additional linker flags to pass to port drivers in the deps list 
%% when they are linked.
%%
{ x_comp_ld_flags, "" }.

